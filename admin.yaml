apiVersion: v1
kind: Namespace
metadata:
  name: roboshop
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: roboshop
  name: roboshop-admin
rules:
- apiGroups: ["*"] # "" indicates the core API group
  resources: ["*"]
  verbs: ["*"] # actions on resources, create, read, update, delete.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: roboshop-cluster-reader
rules:
- apiGroups: ["v1", "apps/v1",""]
  resources: ["secrets","nodes","namespaces","persistentvolumes"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: roboshop-admin
  namespace: roboshop
subjects:
- kind: User
  name: ramesh
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: roboshop-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: roboshop-cluster-reader
subjects:
- kind: User
  name: ramesh # Name is case sensitive
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: roboshop-cluster-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
data:
  mapRoles: |
    - groups:
      - system:bootstrappers
      - system:nodes
      rolearn: arn:aws:iam::612400101384:role/eksctl-eks-spot-cluster-nodegroup--NodeInstanceRole-w4Y5adK9efAg
      username: system:node:{{EC2PrivateDNSName}}
  mapUsers: |
    - groups:
      - roboshop-admin
      userarn: arn:aws:iam::612400101384:user/ramesh
      username: ramesh
kind: ConfigMap
metadata:
  creationTimestamp: "2024-03-04T03:19:26Z"
  name: aws-auth
  namespace: kube-system
  resourceVersion: "1350"
  uid: 2c5b329a-4436-48e6-bd45-982abd4e9d5a
